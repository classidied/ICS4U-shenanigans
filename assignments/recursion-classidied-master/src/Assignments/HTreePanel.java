/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Assignments;

import java.awt.*;
import java.util.Random;

/**
 *
 * @author claire
 */
public class HTreePanel extends javax.swing.JPanel {
    // init vars 
    int x = 180, y = 200, length = 200, depth;
    Random r = new Random();
    Color cLevel;
    /**
     * Creates new form HTreePanel
     */
    public HTreePanel() {
        initComponents();
    }
    /**
     * Draw H Tree
     * @param g graphics
     */
    @Override
    public void paintComponent(Graphics g) {
        // drawing fractal
        hTree(g, depth, x, y, length);
    }
    /**
     *  Recursively drawing H Tree
     * @param g graphics
     * @param depth times recursing
     * @param x left end point of initial line
     * @param y y coordinate of initial line
     * @param length length of initial line
     */
    public void hTree(Graphics g, int depth, int x, int y, int length) {
        // drawing initial H
        // randomizing color
        cLevel = new Color(r.nextInt(256), r.nextInt(256), r.nextInt(256));
        g.setColor(cLevel);
        g.drawLine(x, y, x + length, y);
        g.drawLine(x, y + (length/2), x, y - (length/2));
        g.drawLine(x + length, y + (length/2), x + length, y - (length/2));
        // recursing
        if (depth > 0) {
            // creating a random color for each recursion
            cLevel = new Color(r.nextInt(256), r.nextInt(256), r.nextInt(256));
            g.setColor(cLevel);
            // top left, right
            hTree(g, depth - 1, x - (length/4), y - (length/2), length/2);
            hTree(g, depth - 1, x + 3*(length/4), y - (length/2), length/2);
            // bottom left, right
            hTree(g, depth - 1, x - (length/4), y + (length/2), length/2);
            hTree(g, depth - 1, x + 3*(length/4), y + (length/2), length/2);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
