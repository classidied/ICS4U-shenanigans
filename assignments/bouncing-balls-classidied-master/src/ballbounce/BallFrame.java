/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ballbounce;

import java.awt.Toolkit;

/**
 *
 * @author claire
 */
public class BallFrame extends javax.swing.JFrame {

    /**
     * Creates new form BallFrame
     */
    public BallFrame() {
        initComponents();
        setTitle("Bouncing Ball");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawingArea1 = new ballbounce.DrawingArea();
        stopAnim = new javax.swing.JButton();
        startAnim = new javax.swing.JButton();
        backgrounds = new javax.swing.JComboBox<>();
        bgLabel = new javax.swing.JLabel();
        speedSlider = new javax.swing.JSlider();
        speedLabel = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        slowLabel = new javax.swing.JLabel();
        fastLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        drawingArea1.setBackground(new java.awt.Color(255, 255, 255));

        stopAnim.setText("Stop");
        stopAnim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopAnimActionPerformed(evt);
            }
        });

        startAnim.setText("Start");
        startAnim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startAnimActionPerformed(evt);
            }
        });

        backgrounds.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "aliens.jpg", "alpaca.jpg", "blobfish.jpg", "christmas.jpg", "dinosaur.jpg", "sesame_street.jpg"}));
        backgrounds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backgroundsActionPerformed(evt);
            }
        });

        bgLabel.setText("Backgrounds:");

        speedSlider.setMajorTickSpacing(1);
        speedSlider.setMaximum(10);
        speedSlider.setMinimum(1);
        speedSlider.setPaintLabels(true);
        speedSlider.setPaintTicks(true);
        speedSlider.setSnapToTicks(true);
        speedSlider.setToolTipText("");
        speedSlider.setValue(1);
        speedSlider.setAutoscrolls(true);
        speedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                speedSliderStateChanged(evt);
            }
        });

        speedLabel.setText("Speed of balls");

        add.setText("Add ball");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        slowLabel.setText("Slow");

        fastLabel.setText("Fast");

        javax.swing.GroupLayout drawingArea1Layout = new javax.swing.GroupLayout(drawingArea1);
        drawingArea1.setLayout(drawingArea1Layout);
        drawingArea1Layout.setHorizontalGroup(
            drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingArea1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingArea1Layout.createSequentialGroup()
                        .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bgLabel)
                            .addComponent(backgrounds, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(speedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(drawingArea1Layout.createSequentialGroup()
                                .addComponent(slowLabel)
                                .addGap(29, 29, 29)
                                .addComponent(speedLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fastLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stopAnim, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(startAnim, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)))
                    .addComponent(add, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        drawingArea1Layout.setVerticalGroup(
            drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea1Layout.createSequentialGroup()
                .addContainerGap(189, Short.MAX_VALUE)
                .addComponent(add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(drawingArea1Layout.createSequentialGroup()
                        .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(drawingArea1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(bgLabel))
                            .addComponent(startAnim, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(stopAnim)
                                .addComponent(speedLabel))
                            .addComponent(backgrounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addGroup(drawingArea1Layout.createSequentialGroup()
                        .addComponent(speedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(slowLabel)
                            .addComponent(fastLabel)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drawingArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drawingArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backgroundsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backgroundsActionPerformed
        // TODO add your handling code here:
        int bgChoice = backgrounds.getSelectedIndex();
        switch (bgChoice) {
            case 0:
                drawingArea1.img = Toolkit.getDefaultToolkit().getImage("aliens.jpg");
                break;
            case 1:
                drawingArea1.img = Toolkit.getDefaultToolkit().getImage("alpaca.jpg");
                break;
            case 2:
                drawingArea1.img = Toolkit.getDefaultToolkit().getImage("blobfish.jpg");
                break;
            case 3:
                drawingArea1.img = Toolkit.getDefaultToolkit().getImage("christmas.jpg");
                break;
            case 4:
                drawingArea1.img = Toolkit.getDefaultToolkit().getImage("dinosaur.jpg");
                break;
            case 5:
                drawingArea1.img = Toolkit.getDefaultToolkit().getImage("sesame_street.jpg");
                break;
            default:
                break;
        }
    }//GEN-LAST:event_backgroundsActionPerformed

    private void startAnimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startAnimActionPerformed
        // TODO add your handling code here:
        drawingArea1.anim();
        
    }//GEN-LAST:event_startAnimActionPerformed

    private void stopAnimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopAnimActionPerformed
        // TODO add your handling code here:
        drawingArea1.t1.stop();
    }//GEN-LAST:event_stopAnimActionPerformed

    private void speedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_speedSliderStateChanged
        // TODO add your handling code here:
        int speed = speedSlider.getValue(); 
        drawingArea1.ms = 100 - (speed*10);
        drawingArea1.t1.setDelay(drawingArea1.ms);
    }//GEN-LAST:event_speedSliderStateChanged

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        drawingArea1.addBall();
    }//GEN-LAST:event_addActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BallFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BallFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BallFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BallFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BallFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox<String> backgrounds;
    private javax.swing.JLabel bgLabel;
    private ballbounce.DrawingArea drawingArea1;
    private javax.swing.JLabel fastLabel;
    private javax.swing.JLabel slowLabel;
    private javax.swing.JLabel speedLabel;
    private javax.swing.JSlider speedSlider;
    private javax.swing.JButton startAnim;
    private javax.swing.JButton stopAnim;
    // End of variables declaration//GEN-END:variables
}
